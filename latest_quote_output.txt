Data for AAPL:
('symbol', 'AAPL')
('timestamp', datetime.datetime(2024, 10, 25, 19, 59, 59, 997444, tzinfo=TzInfo(UTC)))
('bid_price', 130.0)
('bid_size', 3.0)
('bid_exchange', 'V')
('ask_price', 231.41)
('ask_size', 4.0)
('ask_exchange', 'V')
('conditions', ['R'])
('tape', 'C')

Data for ABNB:
('symbol', 'ABNB')
('timestamp', datetime.datetime(2024, 10, 25, 19, 59, 59, 911071, tzinfo=TzInfo(UTC)))
('bid_price', 134.58)
('bid_size', 1.0)
('bid_exchange', 'V')
('ask_price', 134.61)
('ask_size', 1.0)
('ask_exchange', 'V')
('conditions', ['R'])
('tape', 'C')

Data for AMC:
('symbol', 'AMC')
('timestamp', datetime.datetime(2024, 10, 25, 19, 59, 59, 324380, tzinfo=TzInfo(UTC)))
('bid_price', 4.33)
('bid_size', 73.0)
('bid_exchange', 'V')
('ask_price', 4.34)
('ask_size', 73.0)
('ask_exchange', 'V')
('conditions', ['R'])
('tape', 'A')

Data for AMD:
('symbol', 'AMD')
('timestamp', datetime.datetime(2024, 10, 25, 19, 59, 59, 787688, tzinfo=TzInfo(UTC)))
('bid_price', 156.22)
('bid_size', 2.0)
('bid_exchange', 'V')
('ask_price', 156.28)
('ask_size', 2.0)
('ask_exchange', 'V')
('conditions', ['R'])
('tape', 'C')

Data for BEP:
('symbol', 'BEP')
('timestamp', datetime.datetime(2024, 10, 25, 19, 59, 50, 166603, tzinfo=TzInfo(UTC)))
('bid_price', 27.7)
('bid_size', 1.0)
('bid_exchange', 'V')
('ask_price', 0.0)
('ask_size', 0.0)
('ask_exchange', ' ')
('conditions', ['R'])
('tape', 'A')

Data for BND:
('symbol', 'BND')
('timestamp', datetime.datetime(2024, 10, 25, 20, 0, 0, 1373, tzinfo=TzInfo(UTC)))
('bid_price', 73.16)
('bid_size', 1.0)
('bid_exchange', 'V')
('ask_price', 0.0)
('ask_size', 0.0)
('ask_exchange', ' ')
('conditions', ['R'])
('tape', 'C')

Data for BRK.B:
('symbol', 'BRK.B')
('timestamp', datetime.datetime(2024, 10, 25, 19, 59, 59, 614024, tzinfo=TzInfo(UTC)))
('bid_price', 454.01)
('bid_size', 1.0)
('bid_exchange', 'V')
('ask_price', 465.0)
('ask_size', 2.0)
('ask_exchange', 'V')
('conditions', ['R'])
('tape', 'A')

Data for BSV:
('symbol', 'BSV')
('timestamp', datetime.datetime(2024, 10, 25, 20, 0, 0, 252030, tzinfo=TzInfo(UTC)))
('bid_price', 77.77)
('bid_size', 10.0)
('bid_exchange', 'V')
('ask_price', 0.0)
('ask_size', 0.0)
('ask_exchange', ' ')
('conditions', ['R'])
('tape', 'B')

Data for DIS:
('symbol', 'DIS')
('timestamp', datetime.datetime(2024, 10, 25, 19, 59, 59, 658207, tzinfo=TzInfo(UTC)))
('bid_price', 95.03)
('bid_size', 1.0)
('bid_exchange', 'V')
('ask_price', 95.05)
('ask_size', 1.0)
('ask_exchange', 'V')
('conditions', ['R'])
('tape', 'A')

Data for GME:
('symbol', 'GME')
('timestamp', datetime.datetime(2024, 10, 25, 19, 59, 59, 939467, tzinfo=TzInfo(UTC)))
('bid_price', 20.57)
('bid_size', 2.0)
('bid_exchange', 'V')
('ask_price', 20.6)
('ask_size', 2.0)
('ask_exchange', 'V')
('conditions', ['R'])
('tape', 'A')

Data for GOOG:
('symbol', 'GOOG')
('timestamp', datetime.datetime(2024, 10, 25, 19, 59, 58, 798866, tzinfo=TzInfo(UTC)))
('bid_price', 166.97)
('bid_size', 1.0)
('bid_exchange', 'V')
('ask_price', 167.02)
('ask_size', 1.0)
('ask_exchange', 'V')
('conditions', ['R'])
('tape', 'C')

Data for IWM:
('symbol', 'IWM')
('timestamp', datetime.datetime(2024, 10, 25, 20, 59, 2, 146319, tzinfo=TzInfo(UTC)))
('bid_price', 218.03)
('bid_size', 10.0)
('bid_exchange', 'V')
('ask_price', 219.47)
('ask_size', 10.0)
('ask_exchange', 'V')
('conditions', ['R'])
('tape', 'B')

Data for KO:
('symbol', 'KO')
('timestamp', datetime.datetime(2024, 10, 25, 19, 59, 59, 923378, tzinfo=TzInfo(UTC)))
('bid_price', 66.79)
('bid_size', 2.0)
('bid_exchange', 'V')
('ask_price', 66.93)
('ask_size', 3.0)
('ask_exchange', 'V')
('conditions', ['R'])
('tape', 'A')

Data for MSFT:
('symbol', 'MSFT')
('timestamp', datetime.datetime(2024, 10, 25, 19, 59, 57, 67915, tzinfo=TzInfo(UTC)))
('bid_price', 428.14)
('bid_size', 1.0)
('bid_exchange', 'V')
('ask_price', 428.23)
('ask_size', 2.0)
('ask_exchange', 'V')
('conditions', ['R'])
('tape', 'C')

Data for NEE:
('symbol', 'NEE')
('timestamp', datetime.datetime(2024, 10, 25, 19, 59, 59, 558178, tzinfo=TzInfo(UTC)))
('bid_price', 81.41)
('bid_size', 1.0)
('bid_exchange', 'V')
('ask_price', 81.44)
('ask_size', 1.0)
('ask_exchange', 'V')
('conditions', ['R'])
('tape', 'A')

Data for NVDA:
('symbol', 'NVDA')
('timestamp', datetime.datetime(2024, 10, 25, 20, 0, 0, 2930, tzinfo=TzInfo(UTC)))
('bid_price', 78.0)
('bid_size', 1.0)
('bid_exchange', 'V')
('ask_price', 0.0)
('ask_size', 0.0)
('ask_exchange', ' ')
('conditions', ['R'])
('tape', 'C')

Data for PG:
('symbol', 'PG')
('timestamp', datetime.datetime(2024, 10, 25, 19, 59, 59, 827258, tzinfo=TzInfo(UTC)))
('bid_price', 167.0)
('bid_size', 2.0)
('bid_exchange', 'V')
('ask_price', 172.0)
('ask_size', 1.0)
('ask_exchange', 'V')
('conditions', ['R'])
('tape', 'A')

Data for PLTR:
('symbol', 'PLTR')
('timestamp', datetime.datetime(2024, 10, 25, 19, 59, 59, 979470, tzinfo=TzInfo(UTC)))
('bid_price', 44.85)
('bid_size', 7.0)
('bid_exchange', 'V')
('ask_price', 44.86)
('ask_size', 11.0)
('ask_exchange', 'V')
('conditions', ['R'])
('tape', 'A')

Data for SPY:
('symbol', 'SPY')
('timestamp', datetime.datetime(2024, 10, 25, 20, 59, 2, 145405, tzinfo=TzInfo(UTC)))
('bid_price', 576.73)
('bid_size', 10.0)
('bid_exchange', 'V')
('ask_price', 580.55)
('ask_size', 10.0)
('ask_exchange', 'V')
('conditions', ['R'])
('tape', 'B')

Data for TSLA:
('symbol', 'TSLA')
('timestamp', datetime.datetime(2024, 10, 25, 20, 56, 2, 241428, tzinfo=TzInfo(UTC)))
('bid_price', 268.6)
('bid_size', 1.0)
('bid_exchange', 'V')
('ask_price', 269.1)
('ask_size', 1.0)
('ask_exchange', 'V')
('conditions', ['R'])
('tape', 'C')

Data for UL:
('symbol', 'UL')
('timestamp', datetime.datetime(2024, 10, 25, 19, 59, 59, 752732, tzinfo=TzInfo(UTC)))
('bid_price', 61.67)
('bid_size', 4.0)
('bid_exchange', 'V')
('ask_price', 61.69)
('ask_size', 1.0)
('ask_exchange', 'V')
('conditions', ['R'])
('tape', 'A')

Data for V:
('symbol', 'V')
('timestamp', datetime.datetime(2024, 10, 25, 19, 59, 59, 998222, tzinfo=TzInfo(UTC)))
('bid_price', 281.66)
('bid_size', 2.0)
('bid_exchange', 'V')
('ask_price', 290.0)
('ask_size', 1.0)
('ask_exchange', 'V')
('conditions', ['R'])
('tape', 'A')

Data for VTI:
('symbol', 'VTI')
('timestamp', datetime.datetime(2024, 10, 25, 19, 59, 59, 992078, tzinfo=TzInfo(UTC)))
('bid_price', 285.41)
('bid_size', 2.0)
('bid_exchange', 'V')
('ask_price', 0.0)
('ask_size', 0.0)
('ask_exchange', ' ')
('conditions', ['R'])
('tape', 'B')

Data for WMT:
('symbol', 'WMT')
('timestamp', datetime.datetime(2024, 10, 25, 19, 59, 59, 902278, tzinfo=TzInfo(UTC)))
('bid_price', 82.5)
('bid_size', 1.0)
('bid_exchange', 'V')
('ask_price', 82.53)
('ask_size', 1.0)
('ask_exchange', 'V')
('conditions', ['R'])
('tape', 'A')

Data for ZM:
('symbol', 'ZM')
('timestamp', datetime.datetime(2024, 10, 25, 19, 59, 59, 902798, tzinfo=TzInfo(UTC)))
('bid_price', 72.63)
('bid_size', 1.0)
('bid_exchange', 'V')
('ask_price', 72.64)
('ask_size', 1.0)
('ask_exchange', 'V')
('conditions', ['R'])
('tape', 'C')

